// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mush
std::vector<std::vector<int>> mush(int n_start, int n_samples, int n_delay_samples);
RcppExport SEXP _curvemush_mush(SEXP n_startSEXP, SEXP n_samplesSEXP, SEXP n_delay_samplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_start(n_startSEXP);
    Rcpp::traits::input_parameter< int >::type n_samples(n_samplesSEXP);
    Rcpp::traits::input_parameter< int >::type n_delay_samples(n_delay_samplesSEXP);
    rcpp_result_gen = Rcpp::wrap(mush(n_start, n_samples, n_delay_samples));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_curvemush_mush", (DL_FUNC) &_curvemush_mush, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_curvemush(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
