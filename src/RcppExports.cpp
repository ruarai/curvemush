// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppThread.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mush_abc
List mush_abc(int n_samples, int n_delay_samples, int n_outputs, int n_days, int steps_per_day, int t_forecast_start, int ward_threshold, int ICU_threshold, NumericMatrix ensemble_curves, NumericMatrix mat_pr_age_given_case, NumericMatrix mat_pr_hosp, NumericMatrix mat_pr_ICU, DataFrame forecasting_parameters, IntegerVector known_ward_vec, IntegerVector known_ICU_vec, double prior_sigma_los, double prior_sigma_hosp);
RcppExport SEXP _curvemush_mush_abc(SEXP n_samplesSEXP, SEXP n_delay_samplesSEXP, SEXP n_outputsSEXP, SEXP n_daysSEXP, SEXP steps_per_daySEXP, SEXP t_forecast_startSEXP, SEXP ward_thresholdSEXP, SEXP ICU_thresholdSEXP, SEXP ensemble_curvesSEXP, SEXP mat_pr_age_given_caseSEXP, SEXP mat_pr_hospSEXP, SEXP mat_pr_ICUSEXP, SEXP forecasting_parametersSEXP, SEXP known_ward_vecSEXP, SEXP known_ICU_vecSEXP, SEXP prior_sigma_losSEXP, SEXP prior_sigma_hospSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_samples(n_samplesSEXP);
    Rcpp::traits::input_parameter< int >::type n_delay_samples(n_delay_samplesSEXP);
    Rcpp::traits::input_parameter< int >::type n_outputs(n_outputsSEXP);
    Rcpp::traits::input_parameter< int >::type n_days(n_daysSEXP);
    Rcpp::traits::input_parameter< int >::type steps_per_day(steps_per_daySEXP);
    Rcpp::traits::input_parameter< int >::type t_forecast_start(t_forecast_startSEXP);
    Rcpp::traits::input_parameter< int >::type ward_threshold(ward_thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type ICU_threshold(ICU_thresholdSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ensemble_curves(ensemble_curvesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat_pr_age_given_case(mat_pr_age_given_caseSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat_pr_hosp(mat_pr_hospSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat_pr_ICU(mat_pr_ICUSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type forecasting_parameters(forecasting_parametersSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type known_ward_vec(known_ward_vecSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type known_ICU_vec(known_ICU_vecSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma_los(prior_sigma_losSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma_hosp(prior_sigma_hospSEXP);
    rcpp_result_gen = Rcpp::wrap(mush_abc(n_samples, n_delay_samples, n_outputs, n_days, steps_per_day, t_forecast_start, ward_threshold, ICU_threshold, ensemble_curves, mat_pr_age_given_case, mat_pr_hosp, mat_pr_ICU, forecasting_parameters, known_ward_vec, known_ICU_vec, prior_sigma_los, prior_sigma_hosp));
    return rcpp_result_gen;
END_RCPP
}
// mush
List mush(int n_samples, int n_delay_samples, int n_days, int steps_per_day, int t_forecast_start, NumericMatrix ensemble_curves, DataFrame forecasting_parameters, float scale_los);
RcppExport SEXP _curvemush_mush(SEXP n_samplesSEXP, SEXP n_delay_samplesSEXP, SEXP n_daysSEXP, SEXP steps_per_daySEXP, SEXP t_forecast_startSEXP, SEXP ensemble_curvesSEXP, SEXP forecasting_parametersSEXP, SEXP scale_losSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_samples(n_samplesSEXP);
    Rcpp::traits::input_parameter< int >::type n_delay_samples(n_delay_samplesSEXP);
    Rcpp::traits::input_parameter< int >::type n_days(n_daysSEXP);
    Rcpp::traits::input_parameter< int >::type steps_per_day(steps_per_daySEXP);
    Rcpp::traits::input_parameter< int >::type t_forecast_start(t_forecast_startSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ensemble_curves(ensemble_curvesSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type forecasting_parameters(forecasting_parametersSEXP);
    Rcpp::traits::input_parameter< float >::type scale_los(scale_losSEXP);
    rcpp_result_gen = Rcpp::wrap(mush(n_samples, n_delay_samples, n_days, steps_per_day, t_forecast_start, ensemble_curves, forecasting_parameters, scale_los));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_curvemush_mush_abc", (DL_FUNC) &_curvemush_mush_abc, 17},
    {"_curvemush_mush", (DL_FUNC) &_curvemush_mush, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_curvemush(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
